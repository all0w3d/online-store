[{"D:\\workspace\\training\\online-store\\client\\src\\index.js":"1","D:\\workspace\\training\\online-store\\client\\src\\App.js":"2","D:\\workspace\\training\\online-store\\client\\src\\store\\UserStore.js":"3","D:\\workspace\\training\\online-store\\client\\src\\store\\DeviceStore.js":"4","D:\\workspace\\training\\online-store\\client\\src\\components\\AppRouter.js":"5","D:\\workspace\\training\\online-store\\client\\src\\components\\NavBar.js":"6","D:\\workspace\\training\\online-store\\client\\src\\http\\userAPI.js":"7","D:\\workspace\\training\\online-store\\client\\src\\routes.js":"8","D:\\workspace\\training\\online-store\\client\\src\\http\\index.js":"9","D:\\workspace\\training\\online-store\\client\\src\\utils\\consts.js":"10","D:\\workspace\\training\\online-store\\client\\src\\pages\\DevicePage.js":"11","D:\\workspace\\training\\online-store\\client\\src\\pages\\Auth.js":"12","D:\\workspace\\training\\online-store\\client\\src\\pages\\Shop.js":"13","D:\\workspace\\training\\online-store\\client\\src\\pages\\Basket.js":"14","D:\\workspace\\training\\online-store\\client\\src\\pages\\Admin.js":"15","D:\\workspace\\training\\online-store\\client\\src\\http\\deviceAPI.js":"16","D:\\workspace\\training\\online-store\\client\\src\\components\\Pages.js":"17","D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceList.js":"18","D:\\workspace\\training\\online-store\\client\\src\\components\\BrandBar.js":"19","D:\\workspace\\training\\online-store\\client\\src\\components\\TypeBar.js":"20","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateType.js":"21","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateDevice.js":"22","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateBrand.js":"23","D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceItem.js":"24","D:\\workspace\\training\\online-store\\client\\src\\store\\BasketStore.js":"25","D:\\workspace\\training\\online-store\\client\\src\\http\\basketApi.js":"26","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\EditDevice.js":"27","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\EditDeviceItem.js":"28"},{"size":521,"mtime":1622055334839,"results":"29","hashOfConfig":"30"},{"size":1855,"mtime":1622224406556,"results":"31","hashOfConfig":"30"},{"size":730,"mtime":1622567512302,"results":"32","hashOfConfig":"30"},{"size":1159,"mtime":1621886021442,"results":"33","hashOfConfig":"30"},{"size":961,"mtime":1621769644165,"results":"34","hashOfConfig":"30"},{"size":2571,"mtime":1622216967522,"results":"35","hashOfConfig":"30"},{"size":1000,"mtime":1622569948368,"results":"36","hashOfConfig":"30"},{"size":811,"mtime":1621974866372,"results":"37","hashOfConfig":"30"},{"size":407,"mtime":1611985807000,"results":"38","hashOfConfig":"30"},{"size":228,"mtime":1611985807000,"results":"39","hashOfConfig":"30"},{"size":3592,"mtime":1622567175690,"results":"40","hashOfConfig":"30"},{"size":3177,"mtime":1622569768816,"results":"41","hashOfConfig":"30"},{"size":1539,"mtime":1621956931937,"results":"42","hashOfConfig":"30"},{"size":1806,"mtime":1622227043849,"results":"43","hashOfConfig":"30"},{"size":1977,"mtime":1622574181085,"results":"44","hashOfConfig":"30"},{"size":999,"mtime":1622579785815,"results":"45","hashOfConfig":"30"},{"size":801,"mtime":1611985807000,"results":"46","hashOfConfig":"30"},{"size":607,"mtime":1621879150089,"results":"47","hashOfConfig":"30"},{"size":945,"mtime":1621959208014,"results":"48","hashOfConfig":"30"},{"size":890,"mtime":1621959218860,"results":"49","hashOfConfig":"30"},{"size":1355,"mtime":1611985807000,"results":"50","hashOfConfig":"30"},{"size":6111,"mtime":1611985807000,"results":"51","hashOfConfig":"30"},{"size":1372,"mtime":1611985807000,"results":"52","hashOfConfig":"30"},{"size":1424,"mtime":1622580459981,"results":"53","hashOfConfig":"30"},{"size":592,"mtime":1622229491345,"results":"54","hashOfConfig":"30"},{"size":587,"mtime":1622226902560,"results":"55","hashOfConfig":"30"},{"size":654,"mtime":1622579864371,"results":"56","hashOfConfig":"30"},{"size":1624,"mtime":1622580449653,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1kek8x6",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\workspace\\training\\online-store\\client\\src\\index.js",[],["121","122"],"D:\\workspace\\training\\online-store\\client\\src\\App.js",["123"],"import React, { useContext, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"./index\";\nimport { check } from \"./http/userAPI\";\nimport { Spinner } from \"react-bootstrap\";\nimport { fetchBaskets, fetchBasketsDevices } from \"./http/basketApi\";\nimport { fetchBrands, fetchOneDevice } from \"./http/deviceAPI\";\n\nconst App = observer(() => {\n  const { user, basket } = useContext(Context);\n\n  useEffect(() => {\n    check()\n      .then((data) => {\n        user.setUser(true);\n        user.setIsAuth(true);\n        user.setIsAdmin(data.role === \"ADMIN\");\n        user.setUserId(data.id);\n        fetchBaskets().then((data) => {\n          data.forEach((i) => {\n            if (i.userId === user.userId) {\n              basket.setId(i.id);\n            }\n          });\n        });\n      })\n      .then(() => {\n        fetchBasketsDevices().then((data) => {\n          basket.clearBasket();\n          data.forEach((data) => {\n            if (data.basketId === basket.id) {\n              fetchOneDevice(data.deviceId).then((data) => {\n                basket.setPrice(data.price);\n\n                fetchBrands().then((datar) => {\n                  datar.forEach((i) => {\n                    if (i.id === data.brandId) {\n                      basket.setDevices(i.name + ` ${data.name}`);\n                    }\n                  });\n                });\n              });\n            }\n          });\n        });\n      })\n      .finally(() => {\n        user.setLoading(false);\n      });\n  }, []);\n\n  if (user.isLoading) {\n    return <Spinner animation={\"grow\"} />;\n  }\n\n  return (\n    <BrowserRouter>\n      <NavBar />\n\n      <AppRouter />\n    </BrowserRouter>\n  );\n});\n\nexport default App;\n","D:\\workspace\\training\\online-store\\client\\src\\store\\UserStore.js",[],"D:\\workspace\\training\\online-store\\client\\src\\store\\DeviceStore.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\AppRouter.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\NavBar.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\userAPI.js",[],"D:\\workspace\\training\\online-store\\client\\src\\routes.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\index.js",[],"D:\\workspace\\training\\online-store\\client\\src\\utils\\consts.js",[],"D:\\workspace\\training\\online-store\\client\\src\\pages\\DevicePage.js",["124"],"D:\\workspace\\training\\online-store\\client\\src\\pages\\Auth.js",["125"],"D:\\workspace\\training\\online-store\\client\\src\\pages\\Shop.js",["126","127"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {device} = useContext(Context)\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n        fetchDevices(null, null, 1, 10).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 10).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [device.page, device.selectedType, device.selectedBrand])\n\n    return (\n        <Container>\n            <Row className=\"mt-2\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <DeviceList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","D:\\workspace\\training\\online-store\\client\\src\\pages\\Basket.js",["128","129"],"import { observer } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { clearBasket } from \"../http/basketApi\";\nimport { fetchBrands, fetchTypes } from \"../http/deviceAPI\";\nimport { Context } from \"../index\";\n\nconst Basket = observer(() => {\n  const { basket } = useContext(Context);\n\n  return (\n    <Container className=\"mt-5\">\n      <Row>Ваши товары:</Row>\n      {basket.devices.length !== 0 ? (\n        basket.devices.map((dev) => {\n         \n          \n          return (\n            <div\n              className=\"alert alert-secondary mt-3\"\n              role=\"alert\"\n              style={{ textDecoration: \"underline\" }}\n              key={Math.random()}\n            >\n              {dev}\n            </div>\n          );\n        })\n      ) : (\n        <div className=\"alert alert-danger mt-3\" role=\"alert\">\n          Товары в корзине отсутствуют!\n        </div>\n      )}\n      <Row className=\"mt-2 mb-2\">\n        Количество товаров: {basket.devices.length}\n      </Row>\n      <Row style={{ display: \"flex\", lineHeight: \"20px\" }}>\n        <div style={{ marginTop: \"3px\", marginRight: \"10px\" }}>Общая цена:</div>{\" \"}\n        &nbsp;\n        <span style={{ textDecoration: \"underline\", fontSize: \"20px\" }}>\n          {basket.price} грн.\n        </span>\n      </Row>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary mt-5\"\n        onClick={() => {\n          clearBasket()\n          basket.clearBasket()\n        }}\n      >\n        Очистить корзину\n      </button>\n      <button type=\"button\" className=\"btn btn-success mt-5 ml-3\">\n        Офрмить заказ\n      </button>\n    </Container>\n  );\n});\n\nexport default Basket;\n","D:\\workspace\\training\\online-store\\client\\src\\pages\\Admin.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\deviceAPI.js",["130"],"D:\\workspace\\training\\online-store\\client\\src\\components\\Pages.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceList.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\BrandBar.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\TypeBar.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateType.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateDevice.js",["131","132"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateBrand.js",["133"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceItem.js",[],"D:\\workspace\\training\\online-store\\client\\src\\store\\BasketStore.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\basketApi.js",["134"],"import { $authHost, $host } from \"./index\";\r\n\r\nexport const fetchBaskets = async () => {\r\n  const { data } = await $authHost.get(\"api/basket/\");\r\n  return data;\r\n};\r\n\r\nexport const fetchBasketsDevices = async () => {\r\n  const { data } = await $authHost.get(\"api/basket_devices/\");\r\n  return data;\r\n};\r\n\r\nexport const addDeviceToBasket = async (device) => {\r\n    const { data } = await $authHost.post('api/basket_devices/', device)\r\n    return data;\r\n}\r\n\r\n\r\nexport const clearBasket = async () => {\r\n  const { data } = await $authHost.delete('api/basket_devices/')\r\n  return data;\r\n} \r\n\r\n","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\EditDevice.js",["135"],"D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\EditDeviceItem.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":53,"column":6,"nodeType":"142","endLine":53,"endColumn":8,"suggestions":"143"},{"ruleId":"140","severity":1,"message":"144","line":30,"column":6,"nodeType":"142","endLine":30,"endColumn":8,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":28,"column":9,"nodeType":"148","messageId":"149","endLine":28,"endColumn":13},{"ruleId":"140","severity":1,"message":"150","line":23,"column":8,"nodeType":"142","endLine":23,"endColumn":10,"suggestions":"151"},{"ruleId":"140","severity":1,"message":"150","line":30,"column":8,"nodeType":"142","endLine":30,"endColumn":64,"suggestions":"152"},{"ruleId":"146","severity":1,"message":"153","line":5,"column":10,"nodeType":"148","messageId":"149","endLine":5,"endColumn":21},{"ruleId":"146","severity":1,"message":"154","line":5,"column":23,"nodeType":"148","messageId":"149","endLine":5,"endColumn":33},{"ruleId":"146","severity":1,"message":"155","line":2,"column":8,"nodeType":"148","messageId":"149","endLine":2,"endColumn":18},{"ruleId":"146","severity":1,"message":"156","line":5,"column":36,"nodeType":"148","messageId":"149","endLine":5,"endColumn":48},{"ruleId":"140","severity":1,"message":"150","line":18,"column":8,"nodeType":"142","endLine":18,"endColumn":10,"suggestions":"157"},{"ruleId":"146","severity":1,"message":"158","line":4,"column":22,"nodeType":"148","messageId":"149","endLine":4,"endColumn":32},{"ruleId":"146","severity":1,"message":"159","line":1,"column":21,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"160","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":27},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'basket' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["163"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["164"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["165"],["166"],"'fetchBrands' is defined but never used.","'fetchTypes' is defined but never used.","'jwt_decode' is defined but never used.","'fetchDevices' is defined but never used.",["167"],"'createType' is defined but never used.","'$host' is defined but never used.","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"172","fix":"176"},"Update the dependencies array to be: [basket, user]",{"range":"177","text":"178"},"Update the dependencies array to be: [id]",{"range":"179","text":"180"},"Update the dependencies array to be: [device]",{"range":"181","text":"182"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"183","text":"184"},{"range":"185","text":"182"},[1657,1659],"[basket, user]",[988,990],"[id]",[876,878],"[device]",[1109,1165],"[device.page, device.selectedType, device.selectedBrand, device]",[747,749]]