[{"D:\\workspace\\training\\online-store\\client\\src\\index.js":"1","D:\\workspace\\training\\online-store\\client\\src\\App.js":"2","D:\\workspace\\training\\online-store\\client\\src\\store\\UserStore.js":"3","D:\\workspace\\training\\online-store\\client\\src\\store\\DeviceStore.js":"4","D:\\workspace\\training\\online-store\\client\\src\\components\\AppRouter.js":"5","D:\\workspace\\training\\online-store\\client\\src\\components\\NavBar.js":"6","D:\\workspace\\training\\online-store\\client\\src\\http\\userAPI.js":"7","D:\\workspace\\training\\online-store\\client\\src\\routes.js":"8","D:\\workspace\\training\\online-store\\client\\src\\http\\index.js":"9","D:\\workspace\\training\\online-store\\client\\src\\utils\\consts.js":"10","D:\\workspace\\training\\online-store\\client\\src\\pages\\DevicePage.js":"11","D:\\workspace\\training\\online-store\\client\\src\\pages\\Auth.js":"12","D:\\workspace\\training\\online-store\\client\\src\\pages\\Shop.js":"13","D:\\workspace\\training\\online-store\\client\\src\\pages\\Basket.js":"14","D:\\workspace\\training\\online-store\\client\\src\\pages\\Admin.js":"15","D:\\workspace\\training\\online-store\\client\\src\\http\\deviceAPI.js":"16","D:\\workspace\\training\\online-store\\client\\src\\components\\Pages.js":"17","D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceList.js":"18","D:\\workspace\\training\\online-store\\client\\src\\components\\BrandBar.js":"19","D:\\workspace\\training\\online-store\\client\\src\\components\\TypeBar.js":"20","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateType.js":"21","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateDevice.js":"22","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateBrand.js":"23","D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceItem.js":"24","D:\\workspace\\training\\online-store\\client\\src\\store\\BasketStore.js":"25","D:\\workspace\\training\\online-store\\client\\src\\http\\basketApi.js":"26"},{"size":521,"mtime":1622055334839,"results":"27","hashOfConfig":"28"},{"size":1855,"mtime":1622224406556,"results":"29","hashOfConfig":"28"},{"size":728,"mtime":1622152551789,"results":"30","hashOfConfig":"28"},{"size":1159,"mtime":1621886021442,"results":"31","hashOfConfig":"28"},{"size":961,"mtime":1621769644165,"results":"32","hashOfConfig":"28"},{"size":2571,"mtime":1622216967522,"results":"33","hashOfConfig":"28"},{"size":969,"mtime":1622059844773,"results":"34","hashOfConfig":"28"},{"size":811,"mtime":1621974866372,"results":"35","hashOfConfig":"28"},{"size":407,"mtime":1611985807000,"results":"36","hashOfConfig":"28"},{"size":228,"mtime":1611985807000,"results":"37","hashOfConfig":"28"},{"size":3254,"mtime":1622229491345,"results":"38","hashOfConfig":"28"},{"size":2774,"mtime":1622153074801,"results":"39","hashOfConfig":"28"},{"size":1539,"mtime":1621956931937,"results":"40","hashOfConfig":"28"},{"size":1806,"mtime":1622227043849,"results":"41","hashOfConfig":"28"},{"size":1549,"mtime":1611985807000,"results":"42","hashOfConfig":"28"},{"size":996,"mtime":1621956956938,"results":"43","hashOfConfig":"28"},{"size":801,"mtime":1611985807000,"results":"44","hashOfConfig":"28"},{"size":607,"mtime":1621879150089,"results":"45","hashOfConfig":"28"},{"size":945,"mtime":1621959208014,"results":"46","hashOfConfig":"28"},{"size":890,"mtime":1621959218860,"results":"47","hashOfConfig":"28"},{"size":1355,"mtime":1611985807000,"results":"48","hashOfConfig":"28"},{"size":6111,"mtime":1611985807000,"results":"49","hashOfConfig":"28"},{"size":1372,"mtime":1611985807000,"results":"50","hashOfConfig":"28"},{"size":1424,"mtime":1622139776666,"results":"51","hashOfConfig":"28"},{"size":592,"mtime":1622229491345,"results":"52","hashOfConfig":"28"},{"size":587,"mtime":1622226902560,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1kek8x6",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\workspace\\training\\online-store\\client\\src\\index.js",[],["112","113"],"D:\\workspace\\training\\online-store\\client\\src\\App.js",["114"],"D:\\workspace\\training\\online-store\\client\\src\\store\\UserStore.js",[],"D:\\workspace\\training\\online-store\\client\\src\\store\\DeviceStore.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\AppRouter.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\NavBar.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\userAPI.js",[],"D:\\workspace\\training\\online-store\\client\\src\\routes.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\index.js",[],"D:\\workspace\\training\\online-store\\client\\src\\utils\\consts.js",[],"D:\\workspace\\training\\online-store\\client\\src\\pages\\DevicePage.js",["115","116"],"D:\\workspace\\training\\online-store\\client\\src\\pages\\Auth.js",["117","118"],"import React, { useContext, useState } from \"react\";\nimport { Container, Form } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport { NavLink, useLocation, useHistory, withRouter } from \"react-router-dom\";\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE } from \"../utils/consts\";\nimport { check, login, registration } from \"../http/userAPI\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\n\nconst Auth = observer(() => {\n  const { user } = useContext(Context);\n  const location = useLocation();\n  const history = useHistory();\n  const isLogin = location.pathname === LOGIN_ROUTE;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const click = async () => {\n    try {\n      let data;\n      if (isLogin) {\n        data = await login(email, password);\n      } else {\n        data = await registration(email, password);\n      }\n\n      user.setUser(user);\n      user.setIsAuth(true);\n      check().then((data) => {\n        user.setIsAdmin(data.role === \"ADMIN\");\n      });\n\n      history.push(SHOP_ROUTE);\n      window.location.reload();\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n\n  return (\n    <Container\n      className=\"d-flex justify-content-center align-items-center\"\n      style={{ height: window.innerHeight - 54 }}\n    >\n      <Card style={{ width: 600 }} className=\"p-5\">\n        <h2 className=\"m-auto\">{isLogin ? \"Авторизация\" : \"Регистрация\"}</h2>\n        <Form className=\"d-flex flex-column\">\n          <Form.Control\n            className=\"mt-3\"\n            placeholder=\"Введите ваш email...\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <Form.Control\n            className=\"mt-3\"\n            placeholder=\"Введите ваш пароль...\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type=\"password\"\n          />\n          <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n            {isLogin ? (\n              <div>\n                Нет аккаунта?{\" \"}\n                <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n              </div>\n            ) : (\n              <div>\n                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n              </div>\n            )}\n            <Button variant={\"outline-success\"} onClick={click}>\n              {isLogin ? \"Войти\" : \"Регистрация\"}\n            </Button>\n          </Row>\n        </Form>\n      </Card>\n    </Container>\n  );\n});\n\nexport default Auth;\n","D:\\workspace\\training\\online-store\\client\\src\\pages\\Shop.js",["119","120"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {device} = useContext(Context)\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n        fetchDevices(null, null, 1, 10).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 10).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [device.page, device.selectedType, device.selectedBrand])\n\n    return (\n        <Container>\n            <Row className=\"mt-2\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <DeviceList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","D:\\workspace\\training\\online-store\\client\\src\\pages\\Basket.js",["121","122"],"D:\\workspace\\training\\online-store\\client\\src\\pages\\Admin.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\deviceAPI.js",["123"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand)\n    return data\n}\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand', )\n    return data\n}\n\nexport const createDevice = async (device) => {\n    const {data} = await $authHost.post('api/device', device)\n    return data\n}\n\nexport const fetchDevices = async (typeId, brandId, page, limit= 10) => {\n    const {data} = await $host.get('api/device', {params: {\n            typeId, brandId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneDevice = async (id) => {\n    const {data} = await $host.get('api/device/' + id)\n    return data\n}\n","D:\\workspace\\training\\online-store\\client\\src\\components\\Pages.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceList.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\BrandBar.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\TypeBar.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateType.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateDevice.js",["124","125"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateBrand.js",["126"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceItem.js",[],"D:\\workspace\\training\\online-store\\client\\src\\store\\BasketStore.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\basketApi.js",["127"],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":53,"column":6,"nodeType":"134","endLine":53,"endColumn":8,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":14,"column":11,"nodeType":"138","messageId":"139","endLine":14,"endColumn":15},{"ruleId":"132","severity":1,"message":"140","line":27,"column":6,"nodeType":"134","endLine":27,"endColumn":8,"suggestions":"141"},{"ruleId":"136","severity":1,"message":"142","line":6,"column":44,"nodeType":"138","messageId":"139","endLine":6,"endColumn":54},{"ruleId":"136","severity":1,"message":"143","line":26,"column":9,"nodeType":"138","messageId":"139","endLine":26,"endColumn":13},{"ruleId":"132","severity":1,"message":"144","line":23,"column":8,"nodeType":"134","endLine":23,"endColumn":10,"suggestions":"145"},{"ruleId":"132","severity":1,"message":"144","line":30,"column":8,"nodeType":"134","endLine":30,"endColumn":64,"suggestions":"146"},{"ruleId":"136","severity":1,"message":"147","line":5,"column":10,"nodeType":"138","messageId":"139","endLine":5,"endColumn":21},{"ruleId":"136","severity":1,"message":"148","line":5,"column":23,"nodeType":"138","messageId":"139","endLine":5,"endColumn":33},{"ruleId":"136","severity":1,"message":"149","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":18},{"ruleId":"136","severity":1,"message":"150","line":5,"column":36,"nodeType":"138","messageId":"139","endLine":5,"endColumn":48},{"ruleId":"132","severity":1,"message":"144","line":18,"column":8,"nodeType":"134","endLine":18,"endColumn":10,"suggestions":"151"},{"ruleId":"136","severity":1,"message":"152","line":4,"column":22,"nodeType":"138","messageId":"139","endLine":4,"endColumn":32},{"ruleId":"136","severity":1,"message":"153","line":1,"column":21,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'basket' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["156"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["157"],"'withRouter' is defined but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["158"],["159"],"'fetchBrands' is defined but never used.","'fetchTypes' is defined but never used.","'jwt_decode' is defined but never used.","'fetchDevices' is defined but never used.",["160"],"'createType' is defined but never used.","'$host' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"165","fix":"169"},"Update the dependencies array to be: [basket, user]",{"range":"170","text":"171"},"Update the dependencies array to be: [id]",{"range":"172","text":"173"},"Update the dependencies array to be: [device]",{"range":"174","text":"175"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"176","text":"177"},{"range":"178","text":"175"},[1657,1659],"[basket, user]",[927,929],"[id]",[876,878],"[device]",[1109,1165],"[device.page, device.selectedType, device.selectedBrand, device]",[747,749]]