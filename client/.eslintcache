[{"D:\\workspace\\training\\online-store\\client\\src\\index.js":"1","D:\\workspace\\training\\online-store\\client\\src\\App.js":"2","D:\\workspace\\training\\online-store\\client\\src\\store\\UserStore.js":"3","D:\\workspace\\training\\online-store\\client\\src\\store\\DeviceStore.js":"4","D:\\workspace\\training\\online-store\\client\\src\\components\\AppRouter.js":"5","D:\\workspace\\training\\online-store\\client\\src\\components\\NavBar.js":"6","D:\\workspace\\training\\online-store\\client\\src\\http\\userAPI.js":"7","D:\\workspace\\training\\online-store\\client\\src\\routes.js":"8","D:\\workspace\\training\\online-store\\client\\src\\http\\index.js":"9","D:\\workspace\\training\\online-store\\client\\src\\utils\\consts.js":"10","D:\\workspace\\training\\online-store\\client\\src\\pages\\DevicePage.js":"11","D:\\workspace\\training\\online-store\\client\\src\\pages\\Auth.js":"12","D:\\workspace\\training\\online-store\\client\\src\\pages\\Shop.js":"13","D:\\workspace\\training\\online-store\\client\\src\\pages\\Basket.js":"14","D:\\workspace\\training\\online-store\\client\\src\\pages\\Admin.js":"15","D:\\workspace\\training\\online-store\\client\\src\\http\\deviceAPI.js":"16","D:\\workspace\\training\\online-store\\client\\src\\components\\Pages.js":"17","D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceList.js":"18","D:\\workspace\\training\\online-store\\client\\src\\components\\BrandBar.js":"19","D:\\workspace\\training\\online-store\\client\\src\\components\\TypeBar.js":"20","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateType.js":"21","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateDevice.js":"22","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateBrand.js":"23","D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceItem.js":"24","D:\\workspace\\training\\online-store\\client\\src\\store\\BasketStore.js":"25","D:\\workspace\\training\\online-store\\client\\src\\http\\basketApi.js":"26","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\EditDevice.js":"27","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\EditDeviceItem.js":"28","D:\\workspace\\training\\online-store\\client\\src\\http\\ratingApi.js":"29"},{"size":521,"mtime":1622055334839,"results":"30","hashOfConfig":"31"},{"size":2027,"mtime":1623686991128,"results":"32","hashOfConfig":"31"},{"size":730,"mtime":1622567512302,"results":"33","hashOfConfig":"31"},{"size":1159,"mtime":1624987000869,"results":"34","hashOfConfig":"31"},{"size":961,"mtime":1621769644165,"results":"35","hashOfConfig":"31"},{"size":2604,"mtime":1624993249282,"results":"36","hashOfConfig":"31"},{"size":1000,"mtime":1622569948368,"results":"37","hashOfConfig":"31"},{"size":811,"mtime":1621974866372,"results":"38","hashOfConfig":"31"},{"size":407,"mtime":1611985807000,"results":"39","hashOfConfig":"31"},{"size":228,"mtime":1611985807000,"results":"40","hashOfConfig":"31"},{"size":5669,"mtime":1624994587475,"results":"41","hashOfConfig":"31"},{"size":3177,"mtime":1622569768816,"results":"42","hashOfConfig":"31"},{"size":1456,"mtime":1624992422894,"results":"43","hashOfConfig":"31"},{"size":2058,"mtime":1624993995663,"results":"44","hashOfConfig":"31"},{"size":2053,"mtime":1624993831924,"results":"45","hashOfConfig":"31"},{"size":1405,"mtime":1624997572608,"results":"46","hashOfConfig":"31"},{"size":752,"mtime":1624984152280,"results":"47","hashOfConfig":"31"},{"size":673,"mtime":1624995538119,"results":"48","hashOfConfig":"31"},{"size":944,"mtime":1624992502935,"results":"49","hashOfConfig":"31"},{"size":933,"mtime":1624992740930,"results":"50","hashOfConfig":"31"},{"size":1355,"mtime":1611985807000,"results":"51","hashOfConfig":"31"},{"size":6097,"mtime":1623693056067,"results":"52","hashOfConfig":"31"},{"size":1296,"mtime":1623692991084,"results":"53","hashOfConfig":"31"},{"size":2401,"mtime":1624992864784,"results":"54","hashOfConfig":"31"},{"size":592,"mtime":1622229491345,"results":"55","hashOfConfig":"31"},{"size":587,"mtime":1622226902560,"results":"56","hashOfConfig":"31"},{"size":904,"mtime":1624986646437,"results":"57","hashOfConfig":"31"},{"size":1988,"mtime":1624985362670,"results":"58","hashOfConfig":"31"},{"size":581,"mtime":1624307390193,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"12phycs",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},"D:\\workspace\\training\\online-store\\client\\src\\index.js",[],["124","125"],"D:\\workspace\\training\\online-store\\client\\src\\App.js",["126"],"import React, { useContext, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"./index\";\nimport { check } from \"./http/userAPI\";\nimport { Spinner } from \"react-bootstrap\";\nimport { fetchBaskets, fetchBasketsDevices } from \"./http/basketApi\";\nimport { fetchBrands, fetchOneDevice } from \"./http/deviceAPI\";\nimport './styles/main.scss'\n\nconst App = observer(() => {\n  const { user, basket } = useContext(Context);\n\n  useEffect(() => {\n    check()\n      .then((data) => {\n        user.setUser(true);\n        user.setIsAuth(true);\n        user.setIsAdmin(data.role === \"ADMIN\");\n        user.setUserId(data.id);\n        fetchBaskets().then((data) => {\n          data.forEach((i) => {\n            if (i.userId === user.userId) {\n              basket.setId(i.id);\n            }\n          });\n        });\n      })\n      .then(() => {\n        fetchBasketsDevices().then((data) => {\n          basket.clearBasket();\n          data.forEach((data) => {\n            if (data.basketId === basket.id) {\n              fetchOneDevice(data.deviceId).then((data) => {\n                basket.setPrice(data.price);\n\n                fetchBrands().then((datar) => {\n                  datar.forEach((i) => {\n                    if (i.id === data.brandId) {\n                      basket.setDevices(i.name + ` ${data.name}`);\n                    }\n                  });\n                });\n              });\n            }\n          });\n        });\n      })\n      .finally(() => {\n        user.setLoading(false);\n      });\n  }, []);\n\n  if (user.isLoading) {\n    return (\n      <div style={{width: '100%', height: '100vh', display: 'flex'}}>\n        <Spinner style={{margin: 'auto'}} animation={\"border\"} variant=\"primary\" />\n      </div>\n    );\n  }\n\n  return (\n    <BrowserRouter>\n      <NavBar />\n\n      <AppRouter />\n    </BrowserRouter>\n  );\n});\n\nexport default App;\n","D:\\workspace\\training\\online-store\\client\\src\\store\\UserStore.js",[],"D:\\workspace\\training\\online-store\\client\\src\\store\\DeviceStore.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\AppRouter.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\NavBar.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\userAPI.js",[],"D:\\workspace\\training\\online-store\\client\\src\\routes.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\index.js",[],"D:\\workspace\\training\\online-store\\client\\src\\utils\\consts.js",[],"D:\\workspace\\training\\online-store\\client\\src\\pages\\DevicePage.js",["127","128"],"D:\\workspace\\training\\online-store\\client\\src\\pages\\Auth.js",["129"],"import React, { useContext, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Form from \"react-bootstrap/Form\";\nimport { NavLink, useLocation, useHistory } from \"react-router-dom\";\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE } from \"../utils/consts\";\nimport { check, login, registration } from \"../http/userAPI\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\n\nconst Auth = observer(() => {\n  const { user } = useContext(Context);\n  const location = useLocation();\n  const history = useHistory();\n  const isLogin = location.pathname === LOGIN_ROUTE;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"false\");\n\n  const click = async () => {\n    try {\n      let data;\n      if (isLogin) {\n        data = await login(email, password);\n      } else {\n        data = await registration(email, password, role);\n      }\n      user.setUser(user);\n      user.setIsAuth(true);\n      check().then((data) => {\n        user.setIsAdmin(data.role === \"ADMIN\");\n      });\n\n      history.push(SHOP_ROUTE);\n      window.location.reload();\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n\n  return (\n    <Container\n      className=\"d-flex justify-content-center align-items-center\"\n      style={{ height: window.innerHeight - 54 }}\n    >\n      <Card style={{ width: 600 }} className=\"p-5\">\n        <h2 className=\"m-auto\">{isLogin ? \"Авторизация\" : \"Регистрация\"}</h2>\n        <Form className=\"d-flex flex-column\">\n          {!isLogin ? (\n            <Form.Check\n              type=\"switch\"\n              id=\"custom-switch\"\n              label=\"Зарегистрироваться как АДМИН\"\n              className=\"mt-3\"\n              onClick={(e) => {setRole(!role)\n              }}\n              \n            />\n          ) : null}\n          <Form.Control\n            className=\"mt-3\"\n            placeholder=\"Введите ваш email...\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <Form.Control\n            className=\"mt-3\"\n            placeholder=\"Введите ваш пароль...\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type=\"password\"\n          />\n          <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n            {isLogin ? (\n              <div>\n                Нет аккаунта?{\" \"}\n                <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n              </div>\n            ) : (\n              <div>\n                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n              </div>\n            )}\n            <Button variant={\"outline-success\"} onClick={click}>\n              {isLogin ? \"Войти\" : \"Регистрация\"}\n            </Button>\n          </Row>\n        </Form>\n      </Card>\n    </Container>\n  );\n});\n\nexport default Auth;\n","D:\\workspace\\training\\online-store\\client\\src\\pages\\Shop.js",["130","131"],"D:\\workspace\\training\\online-store\\client\\src\\pages\\Basket.js",[],"D:\\workspace\\training\\online-store\\client\\src\\pages\\Admin.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\deviceAPI.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\Pages.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceList.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\BrandBar.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\TypeBar.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateType.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateDevice.js",["132"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateBrand.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceItem.js",["133"],"D:\\workspace\\training\\online-store\\client\\src\\store\\BasketStore.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\basketApi.js",["134"],"import { $authHost, $host } from \"./index\";\r\n\r\nexport const fetchBaskets = async () => {\r\n  const { data } = await $authHost.get(\"api/basket/\");\r\n  return data;\r\n};\r\n\r\nexport const fetchBasketsDevices = async () => {\r\n  const { data } = await $authHost.get(\"api/basket_devices/\");\r\n  return data;\r\n};\r\n\r\nexport const addDeviceToBasket = async (device) => {\r\n    const { data } = await $authHost.post('api/basket_devices/', device)\r\n    return data;\r\n}\r\n\r\n\r\nexport const clearBasket = async () => {\r\n  const { data } = await $authHost.delete('api/basket_devices/')\r\n  return data;\r\n} \r\n\r\n","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\EditDevice.js",["135","136"],"D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\EditDeviceItem.js",["137"],"D:\\workspace\\training\\online-store\\client\\src\\http\\ratingApi.js",["138"],"import { $authHost, $host } from \"./index\";\r\n\r\nexport const findRating = async (device) => {\r\n  const { data } = await $authHost.get(\"api/rating/\", { params: { device } });\r\n  return data;\r\n};\r\n\r\nexport const addRating = async (rate, userId, deviceId) => {\r\n  const { data } = await $authHost.post(\"api/rating/\", {\r\n    rate,\r\n    userId,\r\n    deviceId,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\nexport const removeRating = async (user, device) => {\r\n  const { data } = await $authHost.delete(\"api/rating/\", {\r\n    params: {\r\n      user,\r\n      device,\r\n    },\r\n  });\r\n\r\n  return data;\r\n};\r\n",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":54,"column":6,"nodeType":"145","endLine":54,"endColumn":8,"suggestions":"146"},{"ruleId":"143","severity":1,"message":"147","line":42,"column":6,"nodeType":"145","endLine":42,"endColumn":8,"suggestions":"148"},{"ruleId":"143","severity":1,"message":"149","line":59,"column":6,"nodeType":"145","endLine":59,"endColumn":14,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":28,"column":9,"nodeType":"153","messageId":"154","endLine":28,"endColumn":13},{"ruleId":"143","severity":1,"message":"155","line":23,"column":6,"nodeType":"145","endLine":23,"endColumn":8,"suggestions":"156"},{"ruleId":"143","severity":1,"message":"155","line":35,"column":6,"nodeType":"145","endLine":35,"endColumn":68,"suggestions":"157"},{"ruleId":"143","severity":1,"message":"155","line":18,"column":8,"nodeType":"145","endLine":18,"endColumn":10,"suggestions":"158"},{"ruleId":"143","severity":1,"message":"159","line":27,"column":6,"nodeType":"145","endLine":27,"endColumn":8,"suggestions":"160"},{"ruleId":"151","severity":1,"message":"161","line":1,"column":21,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"162","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":27},{"ruleId":"151","severity":1,"message":"163","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":16},{"ruleId":"151","severity":1,"message":"164","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"161","line":1,"column":21,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'basket' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["167"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["168"],"React Hook useEffect has a missing dependency: 'user.userId'. Either include it or remove the dependency array.",["169"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["170"],["171"],["172"],"React Hook useEffect has a missing dependency: 'device.id'. Either include it or remove the dependency array.",["173"],"'$host' is defined but never used.","'useContext' is defined but never used.","'Button' is defined but never used.","'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"180","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [basket, user]",{"range":"187","text":"188"},"Update the dependencies array to be: [id]",{"range":"189","text":"190"},"Update the dependencies array to be: [device, user.userId]",{"range":"191","text":"192"},"Update the dependencies array to be: [device]",{"range":"193","text":"194"},"Update the dependencies array to be: [device.page, device.selectedType.id, device.selectedBrand.id, device]",{"range":"195","text":"196"},{"range":"197","text":"194"},"Update the dependencies array to be: [device.id]",{"range":"198","text":"199"},[1685,1687],"[basket, user]",[1269,1271],"[id]",[1674,1682],"[device, user.userId]",[866,868],"[device]",[1111,1173],"[device.page, device.selectedType.id, device.selectedBrand.id, device]",[733,735],[866,868],"[device.id]"]