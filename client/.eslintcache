[{"D:\\workspace\\training\\online-store\\client\\src\\index.js":"1","D:\\workspace\\training\\online-store\\client\\src\\App.js":"2","D:\\workspace\\training\\online-store\\client\\src\\store\\UserStore.js":"3","D:\\workspace\\training\\online-store\\client\\src\\store\\DeviceStore.js":"4","D:\\workspace\\training\\online-store\\client\\src\\components\\AppRouter.js":"5","D:\\workspace\\training\\online-store\\client\\src\\components\\NavBar.js":"6","D:\\workspace\\training\\online-store\\client\\src\\http\\userAPI.js":"7","D:\\workspace\\training\\online-store\\client\\src\\routes.js":"8","D:\\workspace\\training\\online-store\\client\\src\\http\\index.js":"9","D:\\workspace\\training\\online-store\\client\\src\\utils\\consts.js":"10","D:\\workspace\\training\\online-store\\client\\src\\pages\\DevicePage.js":"11","D:\\workspace\\training\\online-store\\client\\src\\pages\\Auth.js":"12","D:\\workspace\\training\\online-store\\client\\src\\pages\\Shop.js":"13","D:\\workspace\\training\\online-store\\client\\src\\pages\\Basket.js":"14","D:\\workspace\\training\\online-store\\client\\src\\pages\\Admin.js":"15","D:\\workspace\\training\\online-store\\client\\src\\http\\deviceAPI.js":"16","D:\\workspace\\training\\online-store\\client\\src\\components\\Pages.js":"17","D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceList.js":"18","D:\\workspace\\training\\online-store\\client\\src\\components\\BrandBar.js":"19","D:\\workspace\\training\\online-store\\client\\src\\components\\TypeBar.js":"20","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateType.js":"21","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateDevice.js":"22","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateBrand.js":"23","D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceItem.js":"24","D:\\workspace\\training\\online-store\\client\\src\\store\\BasketStore.js":"25","D:\\workspace\\training\\online-store\\client\\src\\http\\basketApi.js":"26"},{"size":521,"mtime":1621966791665,"results":"27","hashOfConfig":"28"},{"size":920,"mtime":1621960827145,"results":"29","hashOfConfig":"28"},{"size":546,"mtime":1621769705434,"results":"30","hashOfConfig":"28"},{"size":1159,"mtime":1621886021442,"results":"31","hashOfConfig":"28"},{"size":961,"mtime":1621769644165,"results":"32","hashOfConfig":"28"},{"size":2183,"mtime":1621969309603,"results":"33","hashOfConfig":"28"},{"size":859,"mtime":1621974116374,"results":"34","hashOfConfig":"28"},{"size":811,"mtime":1621974866372,"results":"35","hashOfConfig":"28"},{"size":407,"mtime":1611985807000,"results":"36","hashOfConfig":"28"},{"size":228,"mtime":1611985807000,"results":"37","hashOfConfig":"28"},{"size":2815,"mtime":1621969329955,"results":"38","hashOfConfig":"28"},{"size":2729,"mtime":1621770507292,"results":"39","hashOfConfig":"28"},{"size":1539,"mtime":1621956931937,"results":"40","hashOfConfig":"28"},{"size":639,"mtime":1621974705498,"results":"41","hashOfConfig":"28"},{"size":1549,"mtime":1611985807000,"results":"42","hashOfConfig":"28"},{"size":996,"mtime":1621956956938,"results":"43","hashOfConfig":"28"},{"size":801,"mtime":1611985807000,"results":"44","hashOfConfig":"28"},{"size":607,"mtime":1621879150089,"results":"45","hashOfConfig":"28"},{"size":945,"mtime":1621959208014,"results":"46","hashOfConfig":"28"},{"size":890,"mtime":1621959218860,"results":"47","hashOfConfig":"28"},{"size":1355,"mtime":1611985807000,"results":"48","hashOfConfig":"28"},{"size":6111,"mtime":1611985807000,"results":"49","hashOfConfig":"28"},{"size":1372,"mtime":1611985807000,"results":"50","hashOfConfig":"28"},{"size":1424,"mtime":1621886021442,"results":"51","hashOfConfig":"28"},{"size":559,"mtime":1621968543025,"results":"52","hashOfConfig":"28"},{"size":199,"mtime":1621975483441,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kek8x6",{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\workspace\\training\\online-store\\client\\src\\index.js",[],"D:\\workspace\\training\\online-store\\client\\src\\App.js",["111"],"D:\\workspace\\training\\online-store\\client\\src\\store\\UserStore.js",[],["112","113"],"D:\\workspace\\training\\online-store\\client\\src\\store\\DeviceStore.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\AppRouter.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\NavBar.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\userAPI.js",[],"D:\\workspace\\training\\online-store\\client\\src\\routes.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\index.js",[],"D:\\workspace\\training\\online-store\\client\\src\\utils\\consts.js",[],"D:\\workspace\\training\\online-store\\client\\src\\pages\\DevicePage.js",["114"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { Button, Card, Col, Container, Image, Row } from \"react-bootstrap\";\nimport bigStar from \"../assets/bigStar.png\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchOneDevice, fetchBrands } from \"../http/deviceAPI\";\nimport { Context } from '../index'\n\nconst DevicePage = () => {\n  const [device, setDevice] = useState({ info: [] });\n  const [brand, setBrand] = useState();\n  const { id } = useParams();\n  const { basket } = useContext(Context);\n  \n  useEffect(() => {\n    fetchOneDevice(id).then((device) => {\n      setDevice(device);\n      fetchBrands().then((data) => {\n        data.forEach((brand) => {\n          if (brand.id === device.brandId) {\n            setBrand(brand.name);\n          }\n        });\n      });\n    });\n  }, []);\n\n  return (\n    <Container className=\"mt-3\">\n      <Row>\n        <Col md={4} style={{ display: \"flex\", alignItems: \"center\" }}>\n          <Image\n            src={process.env.REACT_APP_API_URL + device.img}\n            style={{ maxWidth: \"300px\" }}\n          />\n        </Col>\n        <Col md={4}>\n          <Row className=\"d-flex flex-column align-items-center\">\n            <h2>\n              {brand} {device.name}\n            </h2>\n            <div\n              className=\"d-flex align-items-center justify-content-center\"\n              style={{\n                background: `url(${bigStar}) no-repeat center center`,\n                width: 240,\n                height: 240,\n                backgroundSize: \"cover\",\n                fontSize: 64,\n              }}\n            >\n              {device.rating}\n            </div>\n          </Row>\n        </Col>\n        <Col md={4}>\n          <Card\n            className=\"d-flex flex-column align-items-center justify-content-around\"\n            style={{\n              width: 300,\n              height: 300,\n              fontSize: 32,\n              border: \"5px solid lightgray\",\n            }}\n          >\n            <h3>Цена: {device.price} грн.</h3>\n            <Button variant={\"outline-dark\"} onClick={() => {\n\n              basket.setDevices(`${brand} ${device.name}`)\n              basket.setPrice(device.price)\n              basket.setQuantity(1)\n              \n            }}>Добавить в корзину</Button>\n          </Card>\n        </Col>\n      </Row>\n      <Row className=\"d-flex flex-column m-3\">\n        <h1>Характеристики</h1>\n        {device.info.map((info, index) => (\n          <Row\n            key={info.id}\n            style={{\n              background: index % 2 === 0 ? \"lightgray\" : \"transparent\",\n              padding: 10,\n            }}\n          >\n            {info.title}: {info.description}\n          </Row>\n        ))}\n      </Row>\n    </Container>\n  );\n};\n\nexport default DevicePage;\n","D:\\workspace\\training\\online-store\\client\\src\\pages\\Auth.js",["115"],"import React, { useContext, useState } from \"react\";\nimport { Container, Form } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport { NavLink, useLocation, useHistory } from \"react-router-dom\";\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE } from \"../utils/consts\";\nimport { check, login, registration } from \"../http/userAPI\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\n\nconst Auth = observer(() => {\n  const { user } = useContext(Context);\n  const location = useLocation();\n  const history = useHistory();\n  const isLogin = location.pathname === LOGIN_ROUTE;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const click = async () => {\n    try {\n      let data;\n      if (isLogin) {\n        data = await login(email, password);\n      } else {\n        data = await registration(email, password);\n      }\n\n      user.setUser(user);\n      user.setIsAuth(true);\n      check().then((data) => {\n        user.setIsAdmin(data.role === \"ADMIN\");\n      });\n      history.push(SHOP_ROUTE);\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n\n  return (\n    <Container\n      className=\"d-flex justify-content-center align-items-center\"\n      style={{ height: window.innerHeight - 54 }}\n    >\n      <Card style={{ width: 600 }} className=\"p-5\">\n        <h2 className=\"m-auto\">{isLogin ? \"Авторизация\" : \"Регистрация\"}</h2>\n        <Form className=\"d-flex flex-column\">\n          <Form.Control\n            className=\"mt-3\"\n            placeholder=\"Введите ваш email...\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <Form.Control\n            className=\"mt-3\"\n            placeholder=\"Введите ваш пароль...\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type=\"password\"\n          />\n          <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n            {isLogin ? (\n              <div>\n                Нет аккаунта?{\" \"}\n                <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n              </div>\n            ) : (\n              <div>\n                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n              </div>\n            )}\n            <Button variant={\"outline-success\"} onClick={click}>\n              {isLogin ? \"Войти\" : \"Регистрация\"}\n            </Button>\n          </Row>\n        </Form>\n      </Card>\n    </Container>\n  );\n});\n\nexport default Auth;\n","D:\\workspace\\training\\online-store\\client\\src\\pages\\Shop.js",["116","117"],"D:\\workspace\\training\\online-store\\client\\src\\pages\\Basket.js",[],"D:\\workspace\\training\\online-store\\client\\src\\pages\\Admin.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\deviceAPI.js",["118"],"D:\\workspace\\training\\online-store\\client\\src\\components\\Pages.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceList.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\BrandBar.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\TypeBar.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateType.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateDevice.js",["119","120"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateBrand.js",["121"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceItem.js",[],"D:\\workspace\\training\\online-store\\client\\src\\store\\BasketStore.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\basketApi.js",["122","123"],{"ruleId":"124","severity":1,"message":"125","line":25,"column":6,"nodeType":"126","endLine":25,"endColumn":8,"suggestions":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"124","severity":1,"message":"132","line":25,"column":6,"nodeType":"126","endLine":25,"endColumn":8,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":26,"column":9,"nodeType":"136","messageId":"137","endLine":26,"endColumn":13},{"ruleId":"124","severity":1,"message":"138","line":23,"column":8,"nodeType":"126","endLine":23,"endColumn":10,"suggestions":"139"},{"ruleId":"124","severity":1,"message":"138","line":30,"column":8,"nodeType":"126","endLine":30,"endColumn":64,"suggestions":"140"},{"ruleId":"134","severity":1,"message":"141","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":18},{"ruleId":"134","severity":1,"message":"142","line":5,"column":36,"nodeType":"136","messageId":"137","endLine":5,"endColumn":48},{"ruleId":"124","severity":1,"message":"138","line":18,"column":8,"nodeType":"126","endLine":18,"endColumn":10,"suggestions":"143"},{"ruleId":"134","severity":1,"message":"144","line":4,"column":22,"nodeType":"136","messageId":"137","endLine":4,"endColumn":32},{"ruleId":"134","severity":1,"message":"145","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":19},{"ruleId":"134","severity":1,"message":"141","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":18},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["146"],"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["149"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["150"],["151"],"'jwt_decode' is defined but never used.","'fetchDevices' is defined but never used.",["152"],"'createType' is defined but never used.","'$authHost' is defined but never used.",{"desc":"153","fix":"154"},"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"157","fix":"161"},"Update the dependencies array to be: [user]",{"range":"162","text":"163"},"Update the dependencies array to be: [id]",{"range":"164","text":"165"},"Update the dependencies array to be: [device]",{"range":"166","text":"167"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"168","text":"169"},{"range":"170","text":"167"},[730,732],"[user]",[812,814],"[id]",[876,878],"[device]",[1109,1165],"[device.page, device.selectedType, device.selectedBrand, device]",[747,749]]