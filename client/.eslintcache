[{"D:\\workspace\\training\\online-store\\client\\src\\index.js":"1","D:\\workspace\\training\\online-store\\client\\src\\App.js":"2","D:\\workspace\\training\\online-store\\client\\src\\store\\UserStore.js":"3","D:\\workspace\\training\\online-store\\client\\src\\store\\DeviceStore.js":"4","D:\\workspace\\training\\online-store\\client\\src\\components\\AppRouter.js":"5","D:\\workspace\\training\\online-store\\client\\src\\components\\NavBar.js":"6","D:\\workspace\\training\\online-store\\client\\src\\http\\userAPI.js":"7","D:\\workspace\\training\\online-store\\client\\src\\routes.js":"8","D:\\workspace\\training\\online-store\\client\\src\\http\\index.js":"9","D:\\workspace\\training\\online-store\\client\\src\\utils\\consts.js":"10","D:\\workspace\\training\\online-store\\client\\src\\pages\\DevicePage.js":"11","D:\\workspace\\training\\online-store\\client\\src\\pages\\Auth.js":"12","D:\\workspace\\training\\online-store\\client\\src\\pages\\Shop.js":"13","D:\\workspace\\training\\online-store\\client\\src\\pages\\Basket.js":"14","D:\\workspace\\training\\online-store\\client\\src\\pages\\Admin.js":"15","D:\\workspace\\training\\online-store\\client\\src\\http\\deviceAPI.js":"16","D:\\workspace\\training\\online-store\\client\\src\\components\\Pages.js":"17","D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceList.js":"18","D:\\workspace\\training\\online-store\\client\\src\\components\\BrandBar.js":"19","D:\\workspace\\training\\online-store\\client\\src\\components\\TypeBar.js":"20","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateType.js":"21","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateDevice.js":"22","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateBrand.js":"23","D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceItem.js":"24"},{"size":439,"mtime":1611985807000,"results":"25","hashOfConfig":"26"},{"size":911,"mtime":1621769992460,"results":"27","hashOfConfig":"26"},{"size":546,"mtime":1621769705434,"results":"28","hashOfConfig":"26"},{"size":1159,"mtime":1621886021442,"results":"29","hashOfConfig":"26"},{"size":961,"mtime":1621769644165,"results":"30","hashOfConfig":"26"},{"size":1919,"mtime":1621886893278,"results":"31","hashOfConfig":"26"},{"size":951,"mtime":1621769525003,"results":"32","hashOfConfig":"26"},{"size":810,"mtime":1621769641368,"results":"33","hashOfConfig":"26"},{"size":407,"mtime":1611985807000,"results":"34","hashOfConfig":"26"},{"size":228,"mtime":1611985807000,"results":"35","hashOfConfig":"26"},{"size":2536,"mtime":1621884539456,"results":"36","hashOfConfig":"26"},{"size":2729,"mtime":1621770507292,"results":"37","hashOfConfig":"26"},{"size":1538,"mtime":1621882994096,"results":"38","hashOfConfig":"26"},{"size":146,"mtime":1611985807000,"results":"39","hashOfConfig":"26"},{"size":1549,"mtime":1611985807000,"results":"40","hashOfConfig":"26"},{"size":995,"mtime":1611985807000,"results":"41","hashOfConfig":"26"},{"size":801,"mtime":1611985807000,"results":"42","hashOfConfig":"26"},{"size":607,"mtime":1621879150089,"results":"43","hashOfConfig":"26"},{"size":945,"mtime":1621885726382,"results":"44","hashOfConfig":"26"},{"size":890,"mtime":1621885993549,"results":"45","hashOfConfig":"26"},{"size":1355,"mtime":1611985807000,"results":"46","hashOfConfig":"26"},{"size":6111,"mtime":1611985807000,"results":"47","hashOfConfig":"26"},{"size":1372,"mtime":1611985807000,"results":"48","hashOfConfig":"26"},{"size":1424,"mtime":1621886021442,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1kek8x6",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"D:\\workspace\\training\\online-store\\client\\src\\index.js",[],["104","105"],"D:\\workspace\\training\\online-store\\client\\src\\App.js",["106"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n            user.setIsAdmin(data.role === 'ADMIN')\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","D:\\workspace\\training\\online-store\\client\\src\\store\\UserStore.js",[],"D:\\workspace\\training\\online-store\\client\\src\\store\\DeviceStore.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\AppRouter.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\NavBar.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\userAPI.js",[],"D:\\workspace\\training\\online-store\\client\\src\\routes.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\index.js",[],"D:\\workspace\\training\\online-store\\client\\src\\utils\\consts.js",[],"D:\\workspace\\training\\online-store\\client\\src\\pages\\DevicePage.js",["107"],"D:\\workspace\\training\\online-store\\client\\src\\pages\\Auth.js",["108"],"import React, { useContext, useState } from \"react\";\nimport { Container, Form } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport { NavLink, useLocation, useHistory } from \"react-router-dom\";\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE } from \"../utils/consts\";\nimport { check, login, registration } from \"../http/userAPI\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\n\nconst Auth = observer(() => {\n  const { user } = useContext(Context);\n  const location = useLocation();\n  const history = useHistory();\n  const isLogin = location.pathname === LOGIN_ROUTE;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const click = async () => {\n    try {\n      let data;\n      if (isLogin) {\n        data = await login(email, password);\n      } else {\n        data = await registration(email, password);\n      }\n\n      user.setUser(user);\n      user.setIsAuth(true);\n      check().then((data) => {\n        user.setIsAdmin(data.role === \"ADMIN\");\n      });\n      history.push(SHOP_ROUTE);\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n\n  return (\n    <Container\n      className=\"d-flex justify-content-center align-items-center\"\n      style={{ height: window.innerHeight - 54 }}\n    >\n      <Card style={{ width: 600 }} className=\"p-5\">\n        <h2 className=\"m-auto\">{isLogin ? \"Авторизация\" : \"Регистрация\"}</h2>\n        <Form className=\"d-flex flex-column\">\n          <Form.Control\n            className=\"mt-3\"\n            placeholder=\"Введите ваш email...\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <Form.Control\n            className=\"mt-3\"\n            placeholder=\"Введите ваш пароль...\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type=\"password\"\n          />\n          <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n            {isLogin ? (\n              <div>\n                Нет аккаунта?{\" \"}\n                <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n              </div>\n            ) : (\n              <div>\n                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n              </div>\n            )}\n            <Button variant={\"outline-success\"} onClick={click}>\n              {isLogin ? \"Войти\" : \"Регистрация\"}\n            </Button>\n          </Row>\n        </Form>\n      </Card>\n    </Container>\n  );\n});\n\nexport default Auth;\n","D:\\workspace\\training\\online-store\\client\\src\\pages\\Shop.js",["109","110"],"D:\\workspace\\training\\online-store\\client\\src\\pages\\Basket.js",[],"D:\\workspace\\training\\online-store\\client\\src\\pages\\Admin.js",[],"D:\\workspace\\training\\online-store\\client\\src\\http\\deviceAPI.js",["111"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand)\n    return data\n}\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand', )\n    return data\n}\n\nexport const createDevice = async (device) => {\n    const {data} = await $authHost.post('api/device', device)\n    return data\n}\n\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\n    const {data} = await $host.get('api/device', {params: {\n            typeId, brandId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneDevice = async (id) => {\n    const {data} = await $host.get('api/device/' + id)\n    return data\n}\n","D:\\workspace\\training\\online-store\\client\\src\\components\\Pages.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceList.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\BrandBar.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\TypeBar.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateType.js",[],"D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateDevice.js",["112","113"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","D:\\workspace\\training\\online-store\\client\\src\\components\\modals\\CreateBrand.js",["114"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","D:\\workspace\\training\\online-store\\client\\src\\components\\DeviceItem.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":20,"column":8,"nodeType":"121","endLine":20,"endColumn":10,"suggestions":"122"},{"ruleId":"119","severity":1,"message":"123","line":22,"column":6,"nodeType":"121","endLine":22,"endColumn":8,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":26,"column":9,"nodeType":"127","messageId":"128","endLine":26,"endColumn":13},{"ruleId":"119","severity":1,"message":"129","line":23,"column":8,"nodeType":"121","endLine":23,"endColumn":10,"suggestions":"130"},{"ruleId":"119","severity":1,"message":"129","line":30,"column":8,"nodeType":"121","endLine":30,"endColumn":64,"suggestions":"131"},{"ruleId":"125","severity":1,"message":"132","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"133","line":5,"column":36,"nodeType":"127","messageId":"128","endLine":5,"endColumn":48},{"ruleId":"119","severity":1,"message":"129","line":18,"column":8,"nodeType":"121","endLine":18,"endColumn":10,"suggestions":"134"},{"ruleId":"125","severity":1,"message":"135","line":4,"column":22,"nodeType":"127","messageId":"128","endLine":4,"endColumn":32},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["138"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["139"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["140"],["141"],"'jwt_decode' is defined but never used.","'fetchDevices' is defined but never used.",["142"],"'createType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"147","fix":"151"},"Update the dependencies array to be: [user]",{"range":"152","text":"153"},"Update the dependencies array to be: [id]",{"range":"154","text":"155"},"Update the dependencies array to be: [device]",{"range":"156","text":"157"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"158","text":"159"},{"range":"160","text":"157"},[692,694],"[user]",[720,722],"[id]",[875,877],"[device]",[1108,1164],"[device.page, device.selectedType, device.selectedBrand, device]",[747,749]]